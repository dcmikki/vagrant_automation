# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'libvirt'

$script = <<-SCRIPT
dnf install -y net-tools vim tree git jq ansible bash-completion openssl

# Install Kubectl
echo "Downloading kubectl...."
curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x ./kubectl
mv ./kubectl /usr/local/bin/kubectl

# Install helm
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
rm -rvf get_helm.sh

# Bash auto completion
echo "source <(kubectl completion bash)"  >> /home/vagrant/.bashrc
echo "source <(helm completion bash)"     >> /home/vagrant/.bashrc

echo "192.168.121.146 automation" >> /etc/hosts
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.define "automation" do |automation|
    automation.vm.box = "generic/fedora34"
    automation.vm.network "private_network", ip: "192.168.121.146"
    automation.vm.synced_folder ".", "/vagrant", disabled: false
    automation.vm.hostname = "automation"
  end

  config.vm.provision "shell", inline: $script

  # copy git.yml to vagrant folder
  config.vm.provision "file", source: "git.yml", destination: "/home/vagrant/git.yml"
  
  # run ansible playbook on VM as vagrant user
  config.vm.provision "shell", inline: "ansible-playbook git.yml -v", privileged: false

  config.vm.provision "shell" do |s|
    ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
    s.inline = <<-SHELL
      echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  config.vm.provider "libvirt" do |lb|
    lb.memory = "2048"
    lb.cpus = "2"
  end
end
